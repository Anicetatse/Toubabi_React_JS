// Schéma Prisma pour la base de données Toubabi
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name              String   @db.VarChar(255)
  email             String   @unique @db.VarChar(255)
  email_verified_at DateTime?
  password          String   @db.VarChar(255)
  telephone         String?  @db.VarChar(255)
  adresse           String?  @db.Text
  role              String   @default("client") @db.VarChar(50)
  remember_token    String?  @db.VarChar(100)
  created_at        DateTime?
  updated_at        DateTime?
  
  wishlists         wishlists[]
  commandes         commandes[]
}

model pays {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  nom        String   @db.VarChar(255)
  code       String?  @db.VarChar(10)
  created_at DateTime?
  updated_at DateTime?
  
  villes     villes[]
}

model villes {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  nom        String   @db.VarChar(255)
  pays_id    BigInt   @db.UnsignedBigInt
  created_at DateTime?
  updated_at DateTime?
  
  pays       pays     @relation(fields: [pays_id], references: [id])
  communes   communes[]
  
  @@index([pays_id])
}

model communes {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_ville   BigInt    @db.UnsignedBigInt
  nom        String    @db.VarChar(255)
  image      String?   @db.LongText
  enabled    Boolean   @default(true) @db.TinyInt
  deleted_at DateTime? @db.Timestamp(0)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  
  ville      villes      @relation(fields: [id_ville], references: [id])
  quartiers  quartiers[]
  
  @@index([id_ville])
}

model quartiers {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_commune        BigInt    @db.UnsignedBigInt
  nom               String    @db.VarChar(255)
  images            String?   @db.LongText
  enabled           Boolean   @default(true) @db.TinyInt
  deleted_at        DateTime? @db.Timestamp(0)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  lng               Float?    @db.Double
  lat               Float?    @db.Double
  prix_min_location BigInt?
  prix_moy_location BigInt?
  prix_max_location BigInt?
  prix_min_vente    BigInt?
  prix_moy_vente    BigInt?
  prix_max_vente    BigInt?
  prix_venal        BigInt?
  prix_marchand     BigInt?
  prix_moyen        BigInt?
  
  commune           communes    @relation(fields: [id_commune], references: [id])
  
  @@index([id_commune])
  @@map("quartiers")
}

model categories {
  code        String    @id @db.VarChar(255)
  nom         String    @unique @db.VarChar(255)
  images      String?   @db.LongText
  enabled     Int       @default(1) @db.TinyInt
  pro         Int       @default(0) @db.TinyInt
  deleted_at  DateTime?
  created_at  DateTime?
  updated_at  DateTime?
  
  souscategories souscategories[]
  produits       produits[]
}

model souscategories {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  nom          String   @db.VarChar(255)
  code_categorie String? @db.VarChar(255)
  created_at   DateTime?
  updated_at   DateTime?
  
  categorie    categories? @relation(fields: [code_categorie], references: [code])
  
  @@index([code_categorie])
}

model type_annonces {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  nom         String   @db.VarChar(255)
  description String?  @db.Text
  created_at  DateTime?
  updated_at  DateTime?
}

model produits {
  code                 String    @id @db.VarChar(255)
  nom                  String    @db.VarChar(255)
  image                String    @db.LongText
  prix_achat           BigInt?   @db.BigInt
  prix_vente           BigInt    @db.BigInt
  description          String?   @db.LongText
  code_categorie       String    @db.VarChar(255)
  code_souscategorie   String?   @db.VarChar(255)
  vues                 Int       @default(0)
  surface              Int       @default(0)
  piece                Int       @default(0)
  chambre              Int       @default(0)
  id_commune           Int?
  id_quartier          Int?
  type_annonce         String    @default("louer") @db.VarChar(255)
  meuble               Int?      @db.TinyInt
  long_lat             Int?
  enabled              Int       @db.TinyInt
  owner_id             Int?
  client_owner_id      Int?
  deleted_at           DateTime?
  created_at           DateTime?
  updated_at           DateTime?
  
  categorie            categories?      @relation(fields: [code_categorie], references: [code])
  wishlists            wishlists[]
  commentaires         commentaires[]
  
  @@index([code_categorie])
  @@index([code_souscategorie])
  @@index([id_commune])
  @@index([id_quartier])
}

// Table images n'existe pas dans la base de données Laravel
// Les images sont stockées en JSON dans le champ image de produits

model wishlists {
  id            BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  id_client     BigInt   @db.UnsignedBigInt
  code_produit  String   @db.VarChar(255)
  created_at    DateTime?
  updated_at    DateTime?
  
  user          users    @relation(fields: [id_client], references: [id], onDelete: Cascade)
  produit       produits @relation(fields: [code_produit], references: [code], onDelete: Cascade)
  
  @@unique([id_client, code_produit])
  @@index([id_client])
  @@index([code_produit])
}

model commandes {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     BigInt   @db.UnsignedBigInt
  total       Decimal  @db.Decimal(15, 2)
  statut      String   @default("en_attente") @db.VarChar(50)
  created_at  DateTime?
  updated_at  DateTime?
  
  user        users    @relation(fields: [user_id], references: [id])
  
  @@index([user_id])
}

// Table commande_details n'existe pas dans la base de données Laravel

model commentaires {
  id            BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  nom           String   @db.VarChar(255)
  commentaire   String   @db.Text
  note          BigInt?  @db.UnsignedBigInt
  active        Int      @default(1) @db.TinyInt
  produit_code  String   @db.VarChar(255)
  created_at    DateTime?
  updated_at    DateTime?
  
  produit       produits @relation(fields: [produit_code], references: [code], onDelete: Cascade)
  
  @@index([produit_code])
}

model sliders {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  titre       String   @db.VarChar(255)
  sous_titre  String?  @db.VarChar(255)
  image       String   @db.VarChar(255)
  lien        String?  @db.VarChar(255)
  ordre       Int      @default(0)
  actif       Boolean  @default(true)
  created_at  DateTime?
  updated_at  DateTime?
}

model contact {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  nom         String   @db.VarChar(255)
  email       String   @db.VarChar(255)
  telephone   String?  @db.VarChar(255)
  sujet       String   @db.VarChar(255)
  message     String   @db.Text
  lu          Boolean  @default(false)
  created_at  DateTime?
  updated_at  DateTime?
}

model estimes {
  id                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_quartier               Int?
  coefficient_occupa_sols   Decimal?  @db.Decimal(8, 2)
  hauteur                   Decimal?  @db.Decimal(8, 2)
  niveau                    Int?
  prix_gros_oeuvre          Decimal?  @db.Decimal(10, 2)
  prix_second_oeuvre        Decimal?  @db.Decimal(10, 2)
  prix_gros_oeuvre_r0_legere Decimal? @db.Decimal(10, 2)
  prix_gros_oeuvre_r0_dalle Decimal?  @db.Decimal(10, 2)
  prix_gros_oeuvre_r1_r3    Decimal?  @db.Decimal(10, 2)
  prix_gros_oeuvre_r4_r6    Decimal?  @db.Decimal(10, 2)
  prix_gros_oeuvre_r7_r9    Decimal?  @db.Decimal(10, 2)
  prix_gros_oeuvre_r10_rx   Decimal?  @db.Decimal(10, 2)
  prix_second_oeuvre_bas    Decimal?  @db.Decimal(10, 2)
  prix_second_oeuvre_moyen  Decimal?  @db.Decimal(10, 2)
  prix_second_oeuvre_haut   Decimal?  @db.Decimal(10, 2)
  prix_second_oeuvre_tres_haut Decimal? @db.Decimal(10, 2)
  created_at                DateTime?
  updated_at                DateTime?
}
